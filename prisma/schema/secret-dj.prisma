model Season {
  sort         Int         @id @default(autoincrement())
  id           String      @unique @default(cuid())
  owner        Participant @relation("SeasonOwner", fields: [ownerId], references: [id])
  ownerId      String
  name         String
  description  String
  entries      Entry[]     @relation("SeasonEntries")
  ruleCount    Int
  state        String      @default("sign-up")
  softDeadline DateTime?
  hardDeadline DateTime?
  remindedAt   DateTime    @default(now())
  unlisted     Boolean     @default(false)
  box          Box         @relation(fields: [boxId], references: [id])
  boxId        String      @unique
}

model Rule {
  id              Int    @id @default(autoincrement())
  text            String
  entry           Entry  @relation("EntryRules", fields: [playlistEntryId], references: [id], onDelete: Cascade)
  playlistEntryId String
}

model Entry {
  sort          Int          @id @default(autoincrement())
  id            String       @unique @default(cuid())
  season        Season       @relation("SeasonEntries", fields: [seasonId], references: [id])
  seasonId      String
  recipient     Participant  @relation("RecipientEntries", fields: [recipientId], references: [id])
  recipientId   String
  dj            Participant? @relation("DJEntries", fields: [djId], references: [id])
  djId          String?
  rules         Rule[]       @relation("EntryRules")
  submissionUrl String?
  box           Box          @relation(fields: [boxId], references: [id])
  boxId         String       @unique
}

model Participant {
  id               String   @id @default(cuid())
  ownedSeasons     Season[] @relation("SeasonOwner")
  recipientEntries Entry[]  @relation("RecipientEntries")
  djEntries        Entry[]  @relation("DJEntries")
  email            Email    @relation("ParticipantEmail", fields: [emailId], references: [id], onDelete: Cascade)
  emailId          String   @unique
  name             String
}
